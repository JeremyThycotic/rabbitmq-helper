<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Thycotic.Video</name>
    </assembly>
    <members>
        <member name="T:JetBrains.Annotations.LocalizationRequiredAttribute">
            <summary>
            Indicates that marked element should be localized or not.
            </summary>
            <example>
            <code>
            [LocalizationRequiredAttribute(true)]
            public class Foo
            {
              private string str = "my string"; // Warning: Localizable string
            }
            </code>
            </example>
        </member>
        <member name="M:JetBrains.Annotations.LocalizationRequiredAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:JetBrains.Annotations.LocalizationRequiredAttribute"/> class with
            <see cref="P:JetBrains.Annotations.LocalizationRequiredAttribute.Required"/> set to <see langword="true"/>.
            </summary>
        </member>
        <member name="M:JetBrains.Annotations.LocalizationRequiredAttribute.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:JetBrains.Annotations.LocalizationRequiredAttribute"/> class.
            </summary>
            <param name="required"><c>true</c> if a element should be localized; otherwise, <c>false</c>.</param>
        </member>
        <member name="M:JetBrains.Annotations.LocalizationRequiredAttribute.Equals(System.Object)">
            <summary>
            Returns whether the value of the given object is equal to the current <see cref="T:JetBrains.Annotations.LocalizationRequiredAttribute"/>.
            </summary>
            <param name="obj">The object to test the value equality of. </param>
            <returns>
            <c>true</c> if the value of the given object is equal to that of the current; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:JetBrains.Annotations.LocalizationRequiredAttribute.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>A hash code for the current <see cref="T:JetBrains.Annotations.LocalizationRequiredAttribute"/>.</returns>
        </member>
        <member name="P:JetBrains.Annotations.LocalizationRequiredAttribute.Required">
            <summary>
            Gets a value indicating whether a element should be localized.
            <value><c>true</c> if a element should be localized; otherwise, <c>false</c>.</value>
            </summary>
        </member>
        <member name="T:JetBrains.Annotations.StringFormatMethodAttribute">
            <summary>
            Indicates that the marked method builds string by format pattern and (optional) arguments. 
            Parameter, which contains format string, should be given in constructor.
            The format string should be in <see cref="M:System.String.Format(System.IFormatProvider,System.String,System.Object[])"/> -like form
            </summary>
            <example>
            <code>
            [StringFormatMethod("message")]
            public void ShowError(string message, params object[] args)
            {
              //Do something
            }
            public void Foo()
            {
              ShowError("Failed: {0}"); // Warning: Non-existing argument in format string
            }
            </code>
            </example>
        </member>
        <member name="M:JetBrains.Annotations.StringFormatMethodAttribute.#ctor(System.String)">
            <summary>
            Initializes new instance of StringFormatMethodAttribute
            </summary>
            <param name="formatParameterName">Specifies which parameter of an annotated method should be treated as format-string</param>
        </member>
        <member name="P:JetBrains.Annotations.StringFormatMethodAttribute.FormatParameterName">
            <summary>
            Gets format parameter name
            </summary>
        </member>
        <member name="T:JetBrains.Annotations.InvokerParameterNameAttribute">
            <summary>
            Indicates that the function argument should be string literal and match one of the parameters
            of the caller function.
            For example, ReSharper annotates the parameter of <see cref="T:System.ArgumentNullException"/>.
            </summary>
            <example>
            <code>
            public void Foo(string param)
            {
              if (param == null)
                throw new ArgumentNullException("par"); // Warning: Cannot resolve symbol
            }
            </code>
            </example>
        </member>
        <member name="T:JetBrains.Annotations.NotifyPropertyChangedInvocatorAttribute">
             <summary>
             Indicates that the method is contained in a type that implements
             <see cref="T:System.ComponentModel.INotifyPropertyChanged"/> interface
             and this method is used to notify that some property value changed.
             </summary>
             <remarks>
             The method should be non-static and conform to one of the supported signatures:
             <list>
             <item><c>NotifyChanged(string)</c></item>
             <item><c>NotifyChanged(params string[])</c></item>
             <item><c>NotifyChanged{T}(Expression{Func{T}})</c></item>
             <item><c>NotifyChanged{T,U}(Expression{Func{T,U}})</c></item>
             <item><c>SetProperty{T}(ref T, T, string)</c></item>
             </list>
             </remarks>
             <example>
             <code>
             public class Foo : INotifyPropertyChanged
             {
               public event PropertyChangedEventHandler PropertyChanged;
            
               [NotifyPropertyChangedInvocator]
               protected virtual void NotifyChanged(string propertyName)
               {}
            
               private string _name;
               public string Name
               {
                 get { return _name; }
                 set
                 {
                   _name = value;
                   NotifyChanged("LastName"); // Warning
                 }
               }
             }
             </code>
             Examples of generated notifications:
             <list>
             <item><c>NotifyChanged("Property")</c></item>
             <item><c>NotifyChanged(() =&gt; Property)</c></item>
             <item><c>NotifyChanged((VM x) =&gt; x.Property)</c></item>
             <item><c>SetProperty(ref myField, value, "Property")</c></item>
             </list>
             </example>
        </member>
        <member name="T:JetBrains.Annotations.CanBeNullAttribute">
            <summary>
            Indicates that the value of the marked element could be <c>null</c> sometimes, 
            so the check for <c>null</c> is necessary before its usage.
            </summary>
            <example>
            <code>
            [CanBeNull]
            public object Test()
            {
              return null;
            }
            
            public void UseTest()
            {
              var p = Test(); 
              var s = p.ToString(); // Warning: Possible 'System.NullReferenceException' 
            }
            </code>
            </example>
        </member>
        <member name="T:JetBrains.Annotations.NotNullAttribute">
            <summary>
            Indicates that the value of the marked element could never be <c>null</c>
            </summary>
            <example>
            <code>
            [NotNull]
            public object Foo()
            {
              return null; // Warning: Possible 'null' assignment
            } 
            </code>
            </example>
        </member>
        <member name="T:JetBrains.Annotations.ContractAnnotationAttribute">
            <summary>
            Describes dependency between method input and output.
            </summary>
            <syntax>
            <p>Function Definition Table syntax:</p>
            <list>
            <item>FDT      ::= FDTRow [;FDTRow]*</item>
            <item>FDTRow   ::= Input =&gt; Output | Output &lt;= Input</item>
            <item>Input    ::= ParameterName: Value [, Input]*</item>
            <item>Output   ::= [ParameterName: Value]* {halt|stop|void|nothing|Value}</item>
            <item>Value    ::= true | false | null | notnull | canbenull</item>
            </list>
            If method has single input parameter, it's name could be omitted. <br/>
            Using <c>halt</c> (or <c>void</c>/<c>nothing</c>, which is the same) for method output means that the methos doesn't return normally. <br/>
            <c>canbenull</c> annotation is only applicable for output parameters. <br/>
            You can use multiple <c>[ContractAnnotation]</c> for each FDT row, or use single attribute with rows separated by semicolon. <br/>
            </syntax>
            <examples>
            <list>
            <item><code>
            [ContractAnnotation("=> halt")]
            public void TerminationMethod()
            </code></item>
            <item><code>
            [ContractAnnotation("halt &lt;= condition: false")]
            public void Assert(bool condition, string text) // Regular Assertion method
            </code></item>
            <item><code>
            [ContractAnnotation("s:null => true")]
            public bool IsNullOrEmpty(string s) // String.IsNullOrEmpty
            </code></item>
            <item><code>
            // A method that returns null if the parameter is null, and not null if the parameter is not null
            [ContractAnnotation("null => null; notnull => notnull")]
            public object Transform(object data) 
            </code></item>
            <item><code>
            [ContractAnnotation("s:null=>false; =>true,result:notnull; =>false, result:null")]
            public bool TryParse(string s, out Person result)
            </code></item>
            </list>
            </examples>
        </member>
        <member name="T:JetBrains.Annotations.CannotApplyEqualityOperatorAttribute">
            <summary>
            Indicates that the value of the marked type (or its derivatives)
            cannot be compared using '==' or '!=' operators and <c>Equals()</c> should be used instead.
            However, using '==' or '!=' for comparison with <c>null</c> is always permitted.
            </summary>
            <example>
            <code>
            [CannotApplyEqualityOperator]
            class NoEquality
            {
            }
            
            class UsesNoEquality
            {
              public void Test()
              {
                var ca1 = new NoEquality();
                var ca2 = new NoEquality();
            
                if (ca1 != null) // OK
                {
                  bool condition = ca1 == ca2; // Warning
                }
              }
            }
            </code>
            </example>
        </member>
        <member name="T:JetBrains.Annotations.BaseTypeRequiredAttribute">
            <summary>
            When applied to a target attribute, specifies a requirement for any type marked with 
            the target attribute to implement or inherit specific type or types.
            </summary>
            <example>
            <code>
            [BaseTypeRequired(typeof(IComponent)] // Specify requirement
            public class ComponentAttribute : Attribute 
            {}
            
            [Component] // ComponentAttribute requires implementing IComponent interface
            public class MyComponent : IComponent
            {}
            </code>
            </example>
        </member>
        <member name="M:JetBrains.Annotations.BaseTypeRequiredAttribute.#ctor(System.Type)">
            <summary>
            Initializes new instance of BaseTypeRequiredAttribute
            </summary>
            <param name="baseType">Specifies which types are required</param>
        </member>
        <member name="P:JetBrains.Annotations.BaseTypeRequiredAttribute.BaseTypes">
            <summary>
            Gets enumerations of specified base types
            </summary>
        </member>
        <member name="T:JetBrains.Annotations.UsedImplicitlyAttribute">
            <summary>
            Indicates that the marked symbol is used implicitly (e.g. via reflection, in external library),
            so this symbol will not be marked as unused (as well as by other usage inspections)
            </summary>
        </member>
        <member name="P:JetBrains.Annotations.UsedImplicitlyAttribute.TargetFlags">
            <summary>
            Gets value indicating what is meant to be used
            </summary>
        </member>
        <member name="T:JetBrains.Annotations.MeansImplicitUseAttribute">
            <summary>
            Should be used on attributes and causes ReSharper
            to not mark symbols marked with such attributes as unused (as well as by other usage inspections)
            </summary>
        </member>
        <member name="P:JetBrains.Annotations.MeansImplicitUseAttribute.TargetFlags">
            <summary>
            Gets value indicating what is meant to be used
            </summary>
        </member>
        <member name="F:JetBrains.Annotations.ImplicitUseKindFlags.Access">
            <summary>
            Only entity marked with attribute considered used
            </summary>
        </member>
        <member name="F:JetBrains.Annotations.ImplicitUseKindFlags.Assign">
            <summary>
            Indicates implicit assignment to a member
            </summary>
        </member>
        <member name="F:JetBrains.Annotations.ImplicitUseKindFlags.InstantiatedWithFixedConstructorSignature">
            <summary>
            Indicates implicit instantiation of a type with fixed constructor signature.
            That means any unused constructor parameters won't be reported as such.
            </summary>
        </member>
        <member name="F:JetBrains.Annotations.ImplicitUseKindFlags.InstantiatedNoFixedConstructorSignature">
            <summary>
            Indicates implicit instantiation of a type
            </summary>
        </member>
        <member name="T:JetBrains.Annotations.ImplicitUseTargetFlags">
            <summary>
            Specify what is considered used implicitly when marked with <see cref="T:JetBrains.Annotations.MeansImplicitUseAttribute"/> or <see cref="T:JetBrains.Annotations.UsedImplicitlyAttribute"/>
            </summary>
        </member>
        <member name="F:JetBrains.Annotations.ImplicitUseTargetFlags.Members">
            <summary>
            Members of entity marked with attribute are considered used
            </summary>
        </member>
        <member name="F:JetBrains.Annotations.ImplicitUseTargetFlags.WithMembers">
            <summary>
            Entity marked with attribute and all its members considered used
            </summary>
        </member>
        <member name="T:JetBrains.Annotations.PublicAPIAttribute">
            <summary>
            This attribute is intended to mark publicly available API which should not be removed and so is treated as used.
            </summary>
        </member>
        <member name="T:JetBrains.Annotations.InstantHandleAttribute">
            <summary>
            Tells code analysis engine if the parameter is completely handled when the invoked method is on stack. 
            If the parameter is a delegate, indicates that delegate is executed while the method is executed.
            If the parameter is an enumerable, indicates that it is enumerated while the method is executed.
            </summary>
        </member>
        <member name="T:JetBrains.Annotations.PureAttribute">
             <summary>
             Indicates that a method does not make any observable state changes.
             The same as <see cref="T:System.Diagnostics.Contracts.PureAttribute"/>
             </summary>
             <example>
             <code>
             [Pure]
             private int Multiply(int x, int y)
             {
               return x*y;
             }
            
             public void Foo()
             {
               const int a=2, b=2;
               Multiply(a, b); // Waring: Return value of pure method is not used
             }
             </code>
             </example>
        </member>
        <member name="T:JetBrains.Annotations.PathReferenceAttribute">
            <summary>
            Indicates that a parameter is a path to a file or a folder within a web project.
            Path can be relative or absolute, starting from web root (~).
            </summary>
        </member>
        <member name="T:JetBrains.Annotations.AspMvcActionAttribute">
            <summary>
            ASP.NET MVC attribute. If applied to a parameter, indicates that the parameter is an MVC action.
            If applied to a method, the MVC action name is calculated implicitly from the context.
            Use this attribute for custom wrappers similar to 
            <see cref="!:System.Web.Mvc.Html.ChildActionExtensions.RenderAction(HtmlHelper, String)"/>
            </summary>
        </member>
        <member name="T:JetBrains.Annotations.AspMvcAreaAttribute">
            <summary>
            ASP.NET MVC attribute. Indicates that a parameter is an MVC araa.
            Use this attribute for custom wrappers similar to 
            <see cref="!:System.Web.Mvc.Html.ChildActionExtensions.RenderAction(HtmlHelper, String)"/>
            </summary>
        </member>
        <member name="T:JetBrains.Annotations.AspMvcControllerAttribute">
            <summary>
            ASP.NET MVC attribute. If applied to a parameter, indicates that the parameter is an MVC controller.
            If applied to a method, the MVC controller name is calculated implicitly from the context.
            Use this attribute for custom wrappers similar to 
            <see cref="!:System.Web.Mvc.Html.ChildActionExtensions.RenderAction(HtmlHelper, String, String)"/> 
            </summary>
        </member>
        <member name="T:JetBrains.Annotations.AspMvcMasterAttribute">
            <summary>
            ASP.NET MVC attribute. Indicates that a parameter is an MVC Master.
            Use this attribute for custom wrappers similar to 
            <see cref="!:System.Web.Mvc.Controller.View(String, String)"/>
            </summary>
        </member>
        <member name="T:JetBrains.Annotations.AspMvcModelTypeAttribute">
            <summary>
            ASP.NET MVC attribute. Indicates that a parameter is an MVC model type.
            Use this attribute for custom wrappers similar to 
            <see cref="!:System.Web.Mvc.Controller.View(String, Object)"/>
            </summary>
        </member>
        <member name="T:JetBrains.Annotations.AspMvcPartialViewAttribute">
            <summary>
            ASP.NET MVC attribute. If applied to a parameter, indicates that the parameter is an MVC partial view.
            If applied to a method, the MVC partial view name is calculated implicitly from the context.
            Use this attribute for custom wrappers similar to 
            <see cref="!:System.Web.Mvc.Html.RenderPartialExtensions.RenderPartial(HtmlHelper, String)"/>
            </summary>
        </member>
        <member name="T:JetBrains.Annotations.AspMvcSupressViewErrorAttribute">
            <summary>
            ASP.NET MVC attribute. Allows disabling all inspections for MVC views within a class or a method.
            </summary>
        </member>
        <member name="T:JetBrains.Annotations.AspMvcDisplayTemplateAttribute">
            <summary>
            ASP.NET MVC attribute. Indicates that a parameter is an MVC display template.
            Use this attribute for custom wrappers similar to 
            <see cref="!:System.Web.Mvc.Html.DisplayExtensions.DisplayForModel(HtmlHelper, String)"/>
            </summary>
        </member>
        <member name="T:JetBrains.Annotations.AspMvcEditorTemplateAttribute">
            <summary>
            ASP.NET MVC attribute. Indicates that a parameter is an MVC editor template.
            Use this attribute for custom wrappers similar to 
            <see cref="!:System.Web.Mvc.Html.EditorExtensions.EditorForModel(HtmlHelper, String)"/>
            </summary>
        </member>
        <member name="T:JetBrains.Annotations.AspMvcViewAttribute">
            <summary>
            ASP.NET MVC attribute. If applied to a parameter, indicates that the parameter is an MVC view.
            If applied to a method, the MVC view name is calculated implicitly from the context.
            Use this attribute for custom wrappers similar to 
            <see cref="!:System.Web.Mvc.Controller.View(Object)"/>
            </summary>
        </member>
        <member name="T:JetBrains.Annotations.AspMvcActionSelectorAttribute">
            <summary>
            ASP.NET MVC attribute. When applied to a parameter of an attribute,
            indicates that this parameter is an MVC action name.
            </summary>
            <example>
            <code>
            [ActionName("Foo")]
            public ActionResult Login(string returnUrl)
            {
              ViewBag.ReturnUrl = Url.Action("Foo"); // OK
              return RedirectToAction("Bar"); // Error: Cannot resolve action
            }
            </code>
            </example>
        </member>
        <member name="T:JetBrains.Annotations.RazorSectionAttribute">
            <summary>
            Razor attribute. Indicates that a parameter or a method is a Razor section.
            Use this attribute for custom wrappers similar to 
            <see cref="!:System.Web.WebPages.WebPageBase.RenderSection(String)"/>
            </summary>
        </member>
        <member name="T:Thycotic.Video.Asf.AsfIndexer">
            <summary>
            Indexes streams in an ASF file.
            </summary>
        </member>
        <member name="M:Thycotic.Video.Asf.AsfIndexer.#ctor(System.String,System.TimeSpan)">
            <summary>
            Creates a new <see cref="T:Thycotic.Video.Asf.AsfIndexer"/> from an existing file.
            </summary>
            <param name="path">The fully qualified path to open the ASF file.</param>
            <param name="temporalIndexingRate">The time between index points.</param>
            <exception cref="T:System.ArgumentException">
            <list type="bullet">
            <item>The <paramref name="path"/> parameter is not a full specified, rooted path.</item>
            <item>The <paramref name="path"/> parameter does not refer to a file with a .wmv extension.</item>
            </list>
            </exception>
            <exception cref="T:System.IO.IOException">The path passed to <paramref name="path"/> does not exist.</exception>
            <remarks>The current implementation creates temporal index.</remarks>
        </member>
        <member name="M:Thycotic.Video.Asf.AsfIndexer.IndexAsync">
            <summary>
            Asynchronously starts indexing the ASF file as task-awaitable.
            </summary>
        </member>
        <member name="M:Thycotic.Video.Asf.AsfIndexer.BeginIndex(System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously starts indexing the ASF file.
            </summary>
            <param name="asyncCallback">A callback delegate to be invoked when the indexing is complete, or null.</param>
            <param name="state">An object for custom state.</param>
            <returns>An async operation indicating the status of the current state.</returns>
        </member>
        <member name="M:Thycotic.Video.Asf.AsfIndexer.EndIndex(System.IAsyncResult)">
            <summary>
            Waits for the pending index operation to complete.
            </summary>
            <param name="result">The reference to the pending asynchronous request to wait for.</param>
        </member>
        <member name="M:Thycotic.Video.Asf.AsfIndexer.Dispose">
            <summary>
            Cleans up any resources associated with the ASF indexing session.
            </summary>
        </member>
        <member name="M:Thycotic.Video.Asf.AsfIndexer.Dispose(System.Boolean)">
            <summary>
            Cleans up any resources associated with the ASF indexing session.
            </summary>
            <param name="disposing">True to cleanup managed resources, false for unmanaged only.</param>
        </member>
        <member name="M:Thycotic.Video.Asf.AsfIndexer.Finalize">
            <summary>
            Cleans up any unmanaged resources associated with the ASF indexing session.
            </summary>
        </member>
        <member name="T:Thycotic.Video.Asf.IAttributeCollection">
            <summary>
            A collection of attributes on an ASF file.
            </summary>
        </member>
        <member name="P:Thycotic.Video.Asf.IAttributeCollection.Item(System.Int32)">
            <summary>
            Gets an attribute by attribute index.
            </summary>
            <param name="index">The index of the attribute.</param>
            <returns>The name and value of the attribute.</returns>
        </member>
        <member name="T:Thycotic.Video.Asf.AsfVideoCodecFormat">
            <summary>
            Manages the properties of a codec's format.
            </summary>
        </member>
        <member name="M:Thycotic.Video.Asf.AsfVideoCodecFormat.CreateStreamConfiguration">
            <summary>
            Gets a stream configuration object for this codec format.
            </summary>
            <returns>A configurable stream for this codec and format.</returns>
        </member>
        <member name="P:Thycotic.Video.Asf.AsfVideoCodecFormat.FormatIndex">
            <summary>
            Gets the index of the codec format.
            </summary>
        </member>
        <member name="T:Thycotic.Video.Asf.AsfVideoCodecInfo">
            <summary>
            Manages the properties of a video codec.
            </summary>
        </member>
        <member name="M:Thycotic.Video.Asf.AsfVideoCodecInfo.GetFormats">
            <summary>
            Gets a list of formats supported by the codec.
            </summary>
            <remarks>
            This is primarily used by audio. Video codecs only support one format.
            </remarks>
        </member>
        <member name="P:Thycotic.Video.Asf.AsfVideoCodecInfo.Name">
            <summary>
            Gets the name of the codec.
            </summary>
        </member>
        <member name="P:Thycotic.Video.Asf.AsfVideoCodecInfo.IsVBRSupported">
            <summary>
            Gets a value indicating if Variable Bitrate (VBR) is supported.
            </summary>
        </member>
        <member name="P:Thycotic.Video.Asf.AsfVideoCodecInfo.OfflineComplexity">
            <summary>
            he value is the suggested complexity value for the codec
            when encoding files for local playback. Codec complexity applies
            only to video codecs. The range of complexity values is from 0 to
            the value in <see cref="P:Thycotic.Video.Asf.AsfVideoCodecInfo.MaximumComplexity"/>.
            </summary>
        </member>
        <member name="P:Thycotic.Video.Asf.AsfVideoCodecInfo.MaximumComplexity">
            <summary>
            The value is the maximum complexity value for the codec. Codec complexity applies only to video codecs.
            The range of complexity values is from 0 to this value.
            </summary>
        </member>
        <member name="P:Thycotic.Video.Asf.AsfVideoCodecInfo.LiveComplexity">
            <summary>
            The value is the suggested complexity value for the codec when encoding files for streaming playback.
            Codec complexity applies only to video codecs. The range of complexity values is from 0 to the
            value retrieved with <see cref="P:Thycotic.Video.Asf.AsfVideoCodecInfo.MaximumComplexity"/>
            </summary>
        </member>
        <member name="T:Thycotic.Video.Asf.AsfEncoder">
            <summary>
            Manages encoding/decoding of ASF streams data.
            </summary>
        </member>
        <member name="M:Thycotic.Video.Asf.AsfEncoder.#ctor(System.String,System.Boolean,Thycotic.Video.Asf.AsfProfile)">
            <summary>
            Creates or Opens an ASF stream.
            </summary>
            <param name="path">The fully qualified path to open the ASF stream from, or to create it.</param>
            <param name="createNew">True to create a new ASF file, false if opening an existing file. Currently the only supported value is <c>true</c>.</param>
            <param name="asfProfile">The profile for this writing session. Use the <see cref="T:Thycotic.Video.Asf.AsfProfileManager"/> to manage profile objects.</param>
            <exception cref="T:System.NotSupportedException">createNew was not specified as true.</exception>
            <exception cref="T:Thycotic.Video.Asf.AsfException">Failed to initialize a writer. See the exception details for more information.</exception>
            <exception cref="T:System.ArgumentException">
            <list type="bullet">
            <item>The <paramref name="path"/> parameter is not a full specified, rooted path.</item>
            <item>The <paramref name="path"/> parameter does not refer to a file with a .wmv extension.</item>
            </list>
            </exception>
        </member>
        <member name="M:Thycotic.Video.Asf.AsfEncoder.GetInputs">
            <summary>
            Gets a collection of inputs for the writer.
            </summary>
            <returns>An enumerable collection of inputs.</returns>
        </member>
        <member name="M:Thycotic.Video.Asf.AsfEncoder.CreateWritingSession">
            <summary>
            Initializes a writing a session. You must call <see cref="M:System.IDisposable.Dispose">Dispose</see> to close the session.
            </summary>
            <returns>A disposable object context for when the encoder can write samples.</returns>
            <remarks>The writing session is only valid for the duration of the current AsfEncoder validity.</remarks>
        </member>
        <member name="M:Thycotic.Video.Asf.AsfEncoder.Dispose">
            <summary>
            Cleans up any resources associated with the ASF encoding session.
            </summary>
        </member>
        <member name="M:Thycotic.Video.Asf.AsfEncoder.Dispose(System.Boolean)">
            <summary>
            Cleans up any resources associated with the ASF encoding session.
            </summary>
            <param name="disposing">True to cleanup managed resources, false for unmanaged only.</param>
        </member>
        <member name="M:Thycotic.Video.Asf.AsfEncoder.Finalize">
            <summary>
            Cleans up any unmanaged resources associated with the ASF encoding session.
            </summary>
        </member>
        <member name="P:Thycotic.Video.Asf.AsfEncoder.Sinks">
            <summary>
            Manages the sinks for the writer.
            </summary>
        </member>
        <member name="P:Thycotic.Video.Asf.AsfEncoder.Attributes">
            <summary>
            Manages the attributes of the file.
            </summary>
        </member>
        <member name="P:Thycotic.Video.Asf.AsfEncoder.Path">
            <summary>
            Gets the path of the video ASF file.
            </summary>
        </member>
        <member name="T:Thycotic.Video.Asf.AsfException">
            <summary>
            Provides a class for ASF encoding exceptions.
            </summary>
        </member>
        <member name="T:Thycotic.Video.VideoException">
            <summary>
            Provides a base class for video encoding exceptions.
            </summary>
        </member>
        <member name="M:Thycotic.Video.VideoException.#ctor(System.String)">
            <summary>
            Initializes a new <see cref="T:Thycotic.Video.VideoException"/> instance with a message.
            </summary>
            <param name="message">The message for the exception.</param>
        </member>
        <member name="M:Thycotic.Video.VideoException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new <see cref="T:Thycotic.Video.VideoException"/> instance with a message and inner exception.
            </summary>
            <param name="message">The message for the exception.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:Thycotic.Video.VideoException.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new <see cref="T:Thycotic.Video.VideoException"/> instance with a message and a HRESULT.
            </summary>
            <param name="message">The message for the exception.</param>
            <param name="errorCode">The HRESULT for the inner exception, which is created with <see cref="M:System.Runtime.InteropServices.Marshal.GetExceptionForHR(System.Int32)"/>.</param>
        </member>
        <member name="M:Thycotic.Video.VideoException.#ctor(System.String,System.Int32,Thycotic.Video.EncodingParameter[])">
            <summary>
            Initializes a new <see cref="T:Thycotic.Video.VideoException"/> instance with a message and a HRESULT.
            </summary>
            <param name="message">The message for the exception.</param>
            <param name="errorCode">The HRESULT for the inner exception, which is created with <see cref="M:System.Runtime.InteropServices.Marshal.GetExceptionForHR(System.Int32)"/>.</param>
            <param name="encodingParameters">The current encoding parameters for the session.</param>
        </member>
        <member name="M:Thycotic.Video.VideoException.#ctor(System.String,Thycotic.Video.HRESULT)">
            <summary>
            Initializes a new <see cref="T:Thycotic.Video.VideoException"/> instance with a message and a HRESULT.
            </summary>
            <param name="message">The message for the exception.</param>
            <param name="hresult">The HRESULT for the inner exception, which is created with <see cref="M:System.Runtime.InteropServices.Marshal.GetExceptionForHR(System.Int32)"/>.</param>
        </member>
        <member name="M:Thycotic.Video.VideoException.#ctor(System.String,Thycotic.Video.EncodingParameter[])">
            <summary>
            Initializes a new <see cref="T:Thycotic.Video.VideoException"/> instance with a message and a HRESULT.
            </summary>
            <param name="message">The message for the exception.</param>
            <param name="encodingParameters">The current encoding parameters for the session.</param>
        </member>
        <member name="M:Thycotic.Video.VideoException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Used by the .NET Framework for constructor serialization.
            </summary>
        </member>
        <member name="M:Thycotic.Video.VideoException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with information about the exception.
            </summary>
        </member>
        <member name="M:Thycotic.Video.VideoException.ToString">
            <summary>
            Creates and returns a string representation of the current exception.
            </summary>
            <returns>
            A string representation of the current exception.
            </returns>
        </member>
        <member name="P:Thycotic.Video.VideoException.EncodingParameters">
            <summary>
            Provides any parameters about the current encoding session, if any.
            </summary>
        </member>
        <member name="M:Thycotic.Video.Asf.AsfException.#ctor(System.String)">
            <summary>
            Initializes a new <see cref="T:Thycotic.Video.Asf.AsfException"/> instance with a message.
            </summary>
            <param name="message">The message for the exception.</param>
        </member>
        <member name="M:Thycotic.Video.Asf.AsfException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new <see cref="T:Thycotic.Video.Asf.AsfException"/> instance with a message and inner exception.
            </summary>
            <param name="message">The message for the exception.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:Thycotic.Video.Asf.AsfException.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new <see cref="T:Thycotic.Video.Asf.AsfException"/> instance with a message and a HRESULT.
            </summary>
            <param name="message">The message for the exception.</param>
            <param name="errorCode">The HRESULT for the inner exception, which is created with <see cref="M:System.Runtime.InteropServices.Marshal.GetExceptionForHR(System.Int32)"/>.</param>
        </member>
        <member name="M:Thycotic.Video.Asf.AsfException.#ctor(System.String,Thycotic.Video.HRESULT)">
            <summary>
            Initializes a new <see cref="T:Thycotic.Video.Asf.AsfException"/> instance with a message and a HRESULT.
            </summary>
            <param name="message">The message for the exception.</param>
            <param name="hresult">The HRESULT for the inner exception, which is created with <see cref="M:System.Runtime.InteropServices.Marshal.GetExceptionForHR(System.Int32)"/>.</param>
        </member>
        <member name="M:Thycotic.Video.Asf.AsfException.#ctor(System.String,System.Int32,Thycotic.Video.EncodingParameter[])">
            <summary>
            Initializes a new <see cref="T:Thycotic.Video.Asf.AsfException"/> instance with a message and a HRESULT.
            </summary>
            <param name="message">The message for the exception.</param>
            <param name="errorCode">The HRESULT for the inner exception, which is created with <see cref="M:System.Runtime.InteropServices.Marshal.GetExceptionForHR(System.Int32)"/>.</param>
            <param name="encodingParameters">The current encoding parameters for the session.</param>
        </member>
        <member name="M:Thycotic.Video.Asf.AsfException.#ctor(System.String,Thycotic.Video.HRESULT,Thycotic.Video.EncodingParameter[])">
            <summary>
            Initializes a new <see cref="T:Thycotic.Video.Asf.AsfException"/> instance with a message and a HRESULT.
            </summary>
            <param name="message">The message for the exception.</param>
            <param name="hresult">The HRESULT for the inner exception, which is created with <see cref="M:System.Runtime.InteropServices.Marshal.GetExceptionForHR(System.Int32)"/>.</param>
            <param name="encodingParameters">The current encoding parameters for the session.</param>
        </member>
        <member name="M:Thycotic.Video.Asf.AsfException.#ctor(System.String,Thycotic.Video.EncodingParameter[])">
            <summary>
            Initializes a new <see cref="T:Thycotic.Video.Asf.AsfException"/> instance with a message and a HRESULT.
            </summary>
            <param name="message">The message for the exception.</param>
            <param name="encodingParameters">The current encoding parameters for the session.</param>
        </member>
        <member name="T:Thycotic.Video.Asf.AsfMediaType">
            <summary>
            Indicates the stream type or codec type of the media.
            </summary>
        </member>
        <member name="F:Thycotic.Video.Asf.AsfMediaType.Audio">
            <summary>
            Indicates the stream type is audio.
            </summary>
        </member>
        <member name="F:Thycotic.Video.Asf.AsfMediaType.Video">
            <summary>
            Indicates the stream type is video.
            </summary>
        </member>
        <member name="T:Thycotic.Video.Asf.AsfProfile">
            <summary>
            Manages a particular ASF profile. Use the <see cref="T:Thycotic.Video.Asf.AsfProfileManager"/> to create and manage profiles.
            </summary>
            <remarks>
            Note that the <see cref="T:Thycotic.Video.Asf.AsfProfile"/> is no longer a valid instance when its owning <see cref="T:Thycotic.Video.Asf.AsfProfileManager"/>
            is disposed.
            </remarks>
        </member>
        <member name="M:Thycotic.Video.Asf.AsfProfile.Dispose">
            <summary>
            Cleans up any resources associated with the <see cref="T:Thycotic.Video.Asf.AsfProfile"/>.
            </summary>
        </member>
        <member name="M:Thycotic.Video.Asf.AsfProfile.ReconfigureStream(Thycotic.Video.Asf.AsfStreamConfiguration)">
            <summary>
            Reconfigures an existing stream on the profile with new settings.
            </summary>
            <param name="streamConfiguration">The stream configuration to reconfigure.</param>
        </member>
        <member name="M:Thycotic.Video.Asf.AsfProfile.Finalize">
            <summary>
            Cleans up any unmanaged resources associated with the profile.
            </summary>
        </member>
        <member name="P:Thycotic.Video.Asf.AsfProfile.Version">
            <summary>
            The version of the profile.
            </summary>
            <remarks>
            Possible values:
            <list type="bullet">
            <item>0x40000</item>
            <item>0x70000</item>
            <item>0x80000</item>
            <item>0x90000</item>
            </list>
            </remarks>
        </member>
        <member name="P:Thycotic.Video.Asf.AsfProfile.Streams">
            <summary>
            Gets a collection of streams on the profile.
            </summary>
            <remarks>
            The lifetime of the collection is controlled by the lifetime of the current <see cref="T:Thycotic.Video.Asf.AsfProfile"/>.
            </remarks>
        </member>
        <member name="P:Thycotic.Video.Asf.AsfProfile.Name">
            <summary>
            Gets or sets the name of the profile.
            </summary>
            <remarks>
            The name is limited to 255 characters, including Unicode code points such as
            zero width non-joiners.
            </remarks>
        </member>
        <member name="P:Thycotic.Video.Asf.AsfProfile.Description">
            <summary>
            Gets or sets the description of the profile.
            </summary>
            <remarks>
            The name is limited to 1024 characters, including Unicode code points such as
            zero width non-joiners.
            </remarks>
        </member>
        <member name="T:Thycotic.Video.Asf.IAsfStreamConfigurationCollection">
            <summary>
            Manages a collection of <see cref="T:Thycotic.Video.Asf.AsfStreamConfiguration"/> objects.
            </summary>
        </member>
        <member name="M:Thycotic.Video.Asf.IAsfStreamConfigurationCollection.Add(Thycotic.Video.Asf.AsfStreamConfiguration)">
            <summary>
            Adds a stream to the profile.
            </summary>
            <param name="streamConfiguration">The stream to add to the profile.</param>
        </member>
        <member name="M:Thycotic.Video.Asf.IAsfStreamConfigurationCollection.Clear">
            <summary>
            Removes all streams from the profile.
            </summary>
        </member>
        <member name="M:Thycotic.Video.Asf.IAsfStreamConfigurationCollection.Remove(Thycotic.Video.Asf.AsfStreamConfiguration)">
            <summary>
            Removes a stream from the profile.
            </summary>
            <param name="item">The stream to remove from the profile.</param>
            <returns>True if the stream was removed, false if otherwise.</returns>
            <remarks>False may be returned if the stream did not belong to the profile in the first place.</remarks>
        </member>
        <member name="M:Thycotic.Video.Asf.IAsfStreamConfigurationCollection.Contains(Thycotic.Video.Asf.AsfStreamConfiguration)">
            <summary>
            Determines if a stream exists in the profile by stream name as defined by <see cref="P:Thycotic.Video.Asf.AsfStreamConfiguration.Name"/>.
            </summary>
            <param name="item">The stream to check if it exists in the profile.</param>
            <returns>True if the profile contains a stream with the same name, otherwise false.</returns>
        </member>
        <member name="M:Thycotic.Video.Asf.IAsfStreamConfigurationCollection.CopyTo(Thycotic.Video.Asf.AsfStreamConfiguration[],System.Int32)">
            <summary>
            Copies the stream configurations to an array.
            </summary>
            <param name="array">The array to copy the streams into.</param>
            <param name="arrayIndex">The index of the array which to start copying into.</param>
        </member>
        <member name="M:Thycotic.Video.Asf.IAsfStreamConfigurationCollection.GetStreamByNumber(System.Int16)">
            <summary>
            Gets a stream by stream number.
            </summary>
            <param name="streamNumber">The stream number to retrieve.</param>
            <returns>Null if the stream does not exist, otherwise the stream by the specified number.</returns>
            <exception cref="T:Thycotic.Video.Asf.AsfException">An error occured while retrieving the stream.</exception>
        </member>
        <member name="M:Thycotic.Video.Asf.IAsfStreamConfigurationCollection.RemoveByStreamNumber(System.Int16)">
            <summary>
            Removes a stream from the profile by stream number.
            </summary>
            <param name="streamNumber">The stream number to remove.</param>
            <returns>True if the stream was removed, false if the stream did not belong to the profile.</returns>
            <exception cref="T:Thycotic.Video.Asf.AsfException">An error occured while removing the stream.</exception>
        </member>
        <member name="P:Thycotic.Video.Asf.IAsfStreamConfigurationCollection.Count">
            <summary>
            Gets the number of streams in the profile.
            </summary>
        </member>
        <member name="P:Thycotic.Video.Asf.IAsfStreamConfigurationCollection.IsReadOnly">
            <summary>
            Determines if the stream collection is read only. Currently this always returns false.
            </summary>
        </member>
        <member name="P:Thycotic.Video.Asf.IAsfStreamConfigurationCollection.Item(System.Int32)">
            <summary>
            Gets a stream in the profile by stream index.
            </summary>
            <param name="streamIndex">The stream index to retrieve.</param>
            <returns>Null if the stream does not exist, otherwise the stream at the specified index.</returns>
        </member>
        <member name="T:Thycotic.Video.Asf.AsfProfileManager">
            <summary>
            Manages profiles used for ASF encoding.
            </summary>
        </member>
        <member name="M:Thycotic.Video.Asf.AsfProfileManager.#ctor">
            <summary>
            Creates a new, empty profile manager.
            </summary>
            <exception cref="T:System.Exception">An HRESULT exception from creating the profile manager.</exception>
        </member>
        <member name="M:Thycotic.Video.Asf.AsfProfileManager.Dispose(System.Boolean)">
            <summary>
            Cleans up any resources associated with the profile manager.
            </summary>
            <param name="disposing">True to cleanup managed resources, false for unmanaged only.</param>
        </member>
        <member name="M:Thycotic.Video.Asf.AsfProfileManager.Finalize">
            <summary>
            Cleans up any unmanaged resources associated with the profile manager.
            </summary>
        </member>
        <member name="M:Thycotic.Video.Asf.AsfProfileManager.CreateEmptyProfile">
            <summary>
            Creates a new empty profile.
            </summary>
            <remarks>
            The empty profile will be created with the 0x90000 version.
            The lifetime of this object is not owned by the <see cref="T:Thycotic.Video.Asf.AsfProfileManager"/>. New profiles must be disposed of by the caller.
            It may be desirable for a profile to live past the duration of <see cref="T:Thycotic.Video.Asf.AsfProfileManager"/> lifetime, thus are independent.
            </remarks>
            <returns>A new <see cref="T:Thycotic.Video.Asf.AsfProfile"/> to manage the profile.</returns>
        </member>
        <member name="M:Thycotic.Video.Asf.AsfProfileManager.ExportProfile(Thycotic.Video.Asf.AsfProfile)">
            <summary>
            Exports a profile into an XML document.
            </summary>
            <param name="profile">The profile to export.</param>
            <returns>An XDocument of the profile.</returns>
        </member>
        <member name="M:Thycotic.Video.Asf.AsfProfileManager.GetCodecs(Thycotic.Video.Asf.AsfMediaType)">
            <summary>
            Retrieves a collection of supported codecs.
            </summary>
            <param name="asfMediaType">The media type to get codecs for.</param>
            <returns>An enumerable collection of codecs.</returns>
            <remarks>The lifetime of the enumerable collection is controlled by the enumerator itself.
            The enumerator increments the reference count on the profile manager until the enumerator
            is disposed.</remarks>
        </member>
        <member name="M:Thycotic.Video.Asf.AsfProfileManager.Dispose">
            <summary>
            Cleans up any resources associated with the profile manager.
            </summary>
        </member>
        <member name="T:Thycotic.Video.Asf.AsfStreamConfiguration">
            <summary>
            Allows configuring of stream properties of a profile.
            </summary>
            <remarks>
            If the stream configuration is changed, you must call <see cref="M:Thycotic.Video.Asf.AsfProfile.ReconfigureStream(Thycotic.Video.Asf.AsfStreamConfiguration)"/>
            to persist the changes to the profile.
            </remarks>
            <remarks>The lifetime of the stream configuration is explicitly controlled through <see cref="T:Thycotic.Video.Asf.AsfStreamConfiguration"/>.
            You must dispose of this object to free resources.
            </remarks>
        </member>
        <member name="M:Thycotic.Video.Asf.AsfStreamConfiguration.Dispose(System.Boolean)">
            <summary>
            Cleans up any unmanaged resources associated with the stream.
            </summary>
            <param name="disposing">True to dispose managed resources.</param>
        </member>
        <member name="M:Thycotic.Video.Asf.AsfStreamConfiguration.Finalize">
            <summary>
            Free unmanaged resources associated with the current stream configuration.
            </summary>
        </member>
        <member name="M:Thycotic.Video.Asf.AsfStreamConfiguration.Dispose">
            <summary>
            Frees all resources associated with the current stream configuration.
            </summary>
        </member>
        <member name="P:Thycotic.Video.Asf.AsfStreamConfiguration.MediaType">
            <summary>
            Indicates the media type of the stream.
            </summary>
        </member>
        <member name="P:Thycotic.Video.Asf.AsfStreamConfiguration.StreamBitrate">
            <summary>
            Gets or sets the bitrate, in bits per second, of the stream.
            </summary>
            <remarks>
            Note that if you are using quality-based VBR codecs instead of a codec explicitly set on a bitrate,
            the bitrate must still be set to a positive value.
            </remarks>
            <remarks>You must call <see cref="M:Thycotic.Video.Asf.AsfProfile.ReconfigureStream(Thycotic.Video.Asf.AsfStreamConfiguration)"/> for changes
            to the bitrate to take affect.</remarks>
        </member>
        <member name="P:Thycotic.Video.Asf.AsfStreamConfiguration.BufferWindow">
            <summary>
            Gets or sets the buffer window, in milliseconds, of the stream.
            </summary>
            <remarks>
            The GetBufferWindow method retrieves the maximum latency between when a stream is received and when it begins to be displayed.
            </remarks>
            <remarks>You must call <see cref="M:Thycotic.Video.Asf.AsfProfile.ReconfigureStream(Thycotic.Video.Asf.AsfStreamConfiguration)"/> for changes
            to the buffer window to take affect.</remarks>
        </member>
        <member name="P:Thycotic.Video.Asf.AsfStreamConfiguration.ConnectionName">
            <summary>
            Gets or sets the connection name of the stream.
            </summary>
            <remarks>
            The connection name is not written to the header section of an ASF file.
            If you obtain the stream configuration interface from the reader object or synchronous reader object,
            you cannot retrieve the original connection name.
            </remarks>
        </member>
        <member name="P:Thycotic.Video.Asf.AsfStreamConfiguration.Name">
            <summary>
            Gets or sets the name of the stream.
            </summary>
            <remarks>
            The name is limited to 255 characters, including Unicode code points such as
            zero width non-joiners.
            </remarks>
            <remarks>You must call <see cref="M:Thycotic.Video.Asf.AsfProfile.ReconfigureStream(Thycotic.Video.Asf.AsfStreamConfiguration)"/> for changes
            to the name to take affect.</remarks>
        </member>
        <member name="P:Thycotic.Video.Asf.AsfStreamConfiguration.Number">
            <summary>
            Gets or sets the number of the stream.
            </summary>
            <remarks>
            The stream number must be between 1 and 63.
            </remarks>
            <remarks>You must call <see cref="M:Thycotic.Video.Asf.AsfProfile.ReconfigureStream(Thycotic.Video.Asf.AsfStreamConfiguration)"/> for changes
            to the number to take affect.</remarks>
        </member>
        <member name="P:Thycotic.Video.Asf.AsfStreamConfiguration.VBREnabled">
            <summary>
            Gets or sets if the stream should use VBR encoding.
            </summary>
            <remarks>You must call <see cref="M:Thycotic.Video.Asf.AsfProfile.ReconfigureStream(Thycotic.Video.Asf.AsfStreamConfiguration)"/> for changes
            to the number to take affect.</remarks>
        </member>
        <member name="P:Thycotic.Video.Asf.AsfStreamConfiguration.VBRQuality">
            <summary>
            Gets or sets the VBR quality of the stream.
            </summary>
            <remarks>You must call <see cref="M:Thycotic.Video.Asf.AsfProfile.ReconfigureStream(Thycotic.Video.Asf.AsfStreamConfiguration)"/> for changes
            to the number to take affect.</remarks>
        </member>
        <member name="P:Thycotic.Video.Asf.AsfStreamConfiguration.VBRMaximumBitrate">
            <summary>
            Gets or sets the maximum bitrate for VBR streams.
            </summary>
            <remarks>You must call <see cref="M:Thycotic.Video.Asf.AsfProfile.ReconfigureStream(Thycotic.Video.Asf.AsfStreamConfiguration)"/> for changes
            to the number to take affect.</remarks>
        </member>
        <member name="P:Thycotic.Video.Asf.AsfStreamConfiguration.VBRMaximumBufferWindow">
            <summary>
            Gets or sets the maximum buffer window for VBR streams.
            </summary>
            <remarks>You must call <see cref="M:Thycotic.Video.Asf.AsfProfile.ReconfigureStream(Thycotic.Video.Asf.AsfStreamConfiguration)"/> for changes
            to the number to take affect.</remarks>
        </member>
        <member name="T:Thycotic.Video.Asf.AsfVideoStreamConfiguration">
            <summary>
            Allows configuring of video stream properties of a profile.
            </summary>
            <remarks>
            If the stream configuration is changed, you must call <see cref="M:Thycotic.Video.Asf.AsfProfile.ReconfigureStream(Thycotic.Video.Asf.AsfStreamConfiguration)"/>
            to persist the changes to the profile.
            </remarks>
            <remarks>The lifetime of the stream configuration is explicitly controlled through <see cref="T:Thycotic.Video.Asf.AsfStreamConfiguration"/>.
            You must dispose of this object to free resources.
            </remarks>
        </member>
        <member name="M:Thycotic.Video.Asf.AsfVideoStreamConfiguration.Dispose(System.Boolean)">
            <summary>
            Cleans up any unmanaged resources associated with the stream.
            </summary>
            <param name="disposing">True to dispose managed resources.</param>
        </member>
        <member name="P:Thycotic.Video.Asf.AsfVideoStreamConfiguration.TemporalCompression">
            <summary>
            Set to true if the samples are temporally compressed. Temporal compression is compression where some samples describe
            the changes in content from the previous sample, instead of describing the sample in its entirety. Only compressed
            video can be temporally compressed. By definition, no media type can use both fixed sized samples and temporal compression.
            </summary>
        </member>
        <member name="P:Thycotic.Video.Asf.AsfVideoStreamConfiguration.MediaSubType">
            <summary>
            Subtype of the media sample. The subtype defines a specific format (usually an encoding scheme) within a major media type.
            For example, <see cref="F:Thycotic.Video.Asf.MediaSubTypes.WMMEDIASUBTYPE_WMV3"/> specifies a video stream encoded with the Windows Media Video 9 codec.
            Subtypes can be uncompressed or compressed. For lists of possible media subtypes, see <see cref="T:Thycotic.Video.Asf.MediaSubTypes"/>.
            </summary>
        </member>
        <member name="P:Thycotic.Video.Asf.AsfVideoStreamConfiguration.Bitrate">
            <summary>
            DWORD containing the approximate bit rate, in bits per second.
            For VBR streams this value must be a positive value.
            </summary>
        </member>
        <member name="P:Thycotic.Video.Asf.AsfVideoStreamConfiguration.Quality">
            <summary>
            The quality setting for the video stream.
            </summary>
        </member>
        <member name="P:Thycotic.Video.Asf.AsfVideoStreamConfiguration.BitDepth">
            <summary>
            Retrieves the quality setting for the video stream.
            </summary>
        </member>
        <member name="P:Thycotic.Video.Asf.AsfVideoStreamConfiguration.AverageTimePerFrame">
            <summary>
            The desired average display time of the video frames, in 100-nanosecond units. The actual time per frame may be longer
            </summary>
        </member>
        <member name="P:Thycotic.Video.Asf.AsfVideoStreamConfiguration.Window">
            <summary>
            Specifies the source and target window of the header.
            </summary>
            <remarks>
            This sets the WMVIDEOINFOHEADER.rcSource and WMVIDEOINFOHEADER.rcTarget values simultaneously.
            </remarks>
        </member>
        <member name="P:Thycotic.Video.Asf.AsfVideoStreamConfiguration.MaxKeyFrameSpacing">
            <summary>
            The maximum interval between key frames.
            </summary>
        </member>
        <member name="T:Thycotic.Video.Asf.AsfWriterStream">
            <summary>
            A stream for reading and writing samples in an ASF stream.
            </summary>
            <remarks>A sample stream can be created with with <see cref="M:Thycotic.Video.Asf.IWritingSession.AllocateSample(System.Windows.Media.Imaging.WriteableBitmap)"/>.
            Once the stream has been written with <see cref="M:Thycotic.Video.Asf.ISampleWriter.WriteSample(Thycotic.Video.Asf.AsfWriterStream,System.Int32,System.TimeSpan)"/> the stream is 
            no longer available.
            </remarks>
            <exception cref="T:System.InvalidOperationException">The stream has been disposed or the contents have been written to the ASF stream.</exception>
        </member>
        <member name="T:Thycotic.Video.Asf.HandleWriterStream">
            <summary>
            A stream for reading and writing memory by address.
            </summary>
        </member>
        <member name="M:Thycotic.Video.Asf.HandleWriterStream.Flush">
            <summary>
            When overridden in a derived class, clears all buffers for this stream and causes any buffered data to be written to the underlying device.
            </summary>
            <remarks>For ASF samples this method does nothing as samples are written in memory immediately.</remarks>
            <exception cref="T:System.InvalidOperationException">Attempted to access the stream when it is closed.</exception>
        </member>
        <member name="M:Thycotic.Video.Asf.HandleWriterStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Ssets the position within the current stream.
            </summary>
            <returns>
            The new position within the current stream.
            </returns>
            <param name="offset">A byte offset relative to the <paramref name="origin"/> parameter.</param>
            <param name="origin">A value of type <see cref="T:System.IO.SeekOrigin"/> indicating the reference point used to obtain the new position.</param>
            <exception cref="T:System.IO.IOException">An I/O error occurs</exception>
            <exception cref="T:System.InvalidOperationException">Attempted to access the stream when it is closed.</exception>
        </member>
        <member name="M:Thycotic.Video.Asf.HandleWriterStream.SetLength(System.Int64)">
            <summary>
            Sets the length of the stream.
            </summary>
            <param name="value">The length of the stream.</param>
            <exception cref="T:System.InvalidOperationException">Attempted to access the stream when it is closed.</exception>
        </member>
        <member name="M:Thycotic.Video.Asf.HandleWriterStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            When overridden in a derived class, reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.
            </summary>
            <returns>
            The total number of bytes read into the buffer. This can be less than the number of bytes requested if that many bytes are not currently available, or zero (0) if the end of the stream has been reached.
            </returns>
            <param name="buffer">An array of bytes. When this method returns, the buffer contains the specified byte array with the values between <paramref name="offset"/> and (<paramref name="offset"/> + <paramref name="count"/> - 1) replaced by the bytes read from the current source.</param>
            <param name="offset">The zero-based byte offset in <paramref name="buffer"/> at which to begin storing the data read from the current stream.</param>
            <param name="count">The maximum number of bytes to be read from the current stream.</param>
            <exception cref="T:System.InvalidOperationException">Attempted to access the stream when it is closed.</exception>
        </member>
        <member name="M:Thycotic.Video.Asf.HandleWriterStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.
            </summary>
            <param name="buffer">An array of bytes. This method copies <paramref name="count"/> bytes from <paramref name="buffer"/> to the current stream.</param>
            <param name="offset">The zero-based byte offset in <paramref name="buffer"/> at which to begin copying bytes to the current stream.</param>
            <param name="count">The number of bytes to be written to the current stream.</param>
        </member>
        <member name="M:Thycotic.Video.Asf.HandleWriterStream.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:System.IO.Stream"/> and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="P:Thycotic.Video.Asf.HandleWriterStream.CanRead">
            <summary>
            True if the stream is readable, otherwise false.
            </summary>
        </member>
        <member name="P:Thycotic.Video.Asf.HandleWriterStream.CanSeek">
            <summary>
            True if the stream is seekable, otherwise false.
            </summary>
        </member>
        <member name="P:Thycotic.Video.Asf.HandleWriterStream.CanWrite">
            <summary>
            True if the stream is writable, otherwise false.
            </summary>
        </member>
        <member name="P:Thycotic.Video.Asf.HandleWriterStream.Length">
            <summary>
            Gets the length of the stream. This is the current size of the buffer window.
            </summary>
            <exception cref="T:System.InvalidOperationException">Attempted to access the stream when it is closed.</exception>
        </member>
        <member name="P:Thycotic.Video.Asf.HandleWriterStream.Position">
            <summary>
            The current position within the stream.
            </summary>
        </member>
        <member name="M:Thycotic.Video.Asf.AsfWriterStream.WriteBitmap(System.Windows.Media.Imaging.BitmapSource)">
            <summary>
            Writes a Bitmap's raw scanline data to the underlying stream.
            </summary>
            <param name="source">A source for an image.</param>
        </member>
        <member name="M:Thycotic.Video.Asf.AsfWriterStream.WriteBitmap(System.Byte[])">
            <summary>
            Writes a Bitmap's raw scanline data to the underlying stream.
            </summary>
            <param name="source">The data for the bitmap.</param>
        </member>
        <member name="M:Thycotic.Video.Asf.AsfWriterStream.SetLength(System.Int64)">
            <summary>
            Sets the length of the stream.
            </summary>
            <param name="value">The length of the stream.</param>
            <exception cref="T:System.InvalidOperationException">Attempted to access the stream when it is closed.</exception>
        </member>
        <member name="M:Thycotic.Video.Asf.AsfWriterStream.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:System.IO.Stream"/> and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="P:Thycotic.Video.Asf.AsfWriterStream.MaximumLength">
            <summary>
            The maximum size of the stream. Typically, this will be the size given to
            <see cref="M:Thycotic.Video.Asf.IWritingSession.AllocateSample(System.Int64)"/>
            </summary>
        </member>
        <member name="T:Thycotic.Video.Asf.CodecExtensions">
            <summary>
            Extension methods for finding the correct codec.
            </summary>
        </member>
        <member name="M:Thycotic.Video.Asf.CodecExtensions.GetCodecFormatByMediaType(System.Collections.Generic.IEnumerable{Thycotic.Video.Asf.AsfVideoCodecInfo},System.Guid)">
            <summary>
            Gets a format for a media type.
            </summary>
            <param name="codecs">The collection of codecs to filter.</param>
            <param name="mediaSubType">The media sub type.</param>
            <returns>The format which meets that media type criteria.</returns>
        </member>
        <member name="T:Thycotic.Video.Asf.IInput">
            <summary>
            Allows configuration of input properties for a given input.
            </summary>
        </member>
        <member name="P:Thycotic.Video.Asf.IInput.Index">
            <summary>
            The input number.
            </summary>
        </member>
        <member name="P:Thycotic.Video.Asf.IInput.ConnectionName">
            <summary>
            Gets the name of the connection for the input.
            </summary>
        </member>
        <member name="P:Thycotic.Video.Asf.Input.Index">
            <summary>
            The input number.
            </summary>
        </member>
        <member name="P:Thycotic.Video.Asf.Input.ConnectionName">
            <summary>
            Gets the name of the connection for the input.
            </summary>
        </member>
        <member name="F:Thycotic.Video.Asf.Interop.CODECONSTS.g_wszSpeechCaps">
            <summary>
            The value is one from the <see cref="T:Thycotic.Video.Asf.Interop.WMT_MUSICSPEECH_CLASS_MODE"/> enumeration type indicating the supported mode of the format. This property applies only to the Windows Media Audio 9 Voice codec.
            </summary>
        </member>
        <member name="F:Thycotic.Video.Asf.Interop.CODECONSTS.g_wszComplexityMax">
            <summary>
            The value is the maximum complexity value for the codec. Codec complexity applies only to video codecs. The range of complexity values is from 0 to this value.
            </summary>
        </member>
        <member name="F:Thycotic.Video.Asf.Interop.CODECONSTS.g_wszComplexityOffline">
            <summary>
            The value is the suggested complexity value for the codec when encoding files for local playback. Codec complexity applies only to video codecs. The range of complexity values is from 0 to the value retrieved with <see cref="F:Thycotic.Video.Asf.Interop.CODECONSTS.g_wszComplexityMax"/>.
            </summary>
        </member>
        <member name="F:Thycotic.Video.Asf.Interop.CODECONSTS.g_wszComplexityLive">
            <summary>
            The value is the suggested complexity value for the codec when encoding files for streaming playback. Codec complexity applies only to video codecs. The range of complexity values is from 0 to the value retrieved with <see cref="F:Thycotic.Video.Asf.Interop.CODECONSTS.g_wszComplexityMax"/>.
            </summary>
        </member>
        <member name="F:Thycotic.Video.Asf.Interop.CODECONSTS.g_wszIsVBRSupported">
            <summary>
            The value indicates whether the codec supports VBR.
            </summary>
        </member>
        <member name="F:Thycotic.Video.Asf.Interop.CODECONSTS.g_wszNumPasses">
            <summary>
            Use to enumerate the supported codec formats that use a number of passes.
            </summary>
        </member>
        <member name="F:Thycotic.Video.Asf.Interop.CODECONSTS.g_wszVBREnabled">
            <summary>
            Use to enumerate the supported codec formats that use variable bit rate (VBR) encoding. This value is typically used
            in <see cref="M:Thycotic.Video.Asf.Interop.IWMCodecInfo3.SetCodecEnumerationSetting(System.Guid@,System.UInt32,System.String,Thycotic.Video.Asf.Interop.WMT_ATTR_DATATYPE,System.IntPtr,System.UInt32)"/> and <see cref="M:Thycotic.Video.Asf.Interop.IWMCodecInfo3.GetCodecEnumerationSetting(System.Guid@,System.UInt32,System.String,Thycotic.Video.Asf.Interop.WMT_ATTR_DATATYPE@,System.IntPtr,System.UInt32@)"/>
            </summary>
        </member>
        <member name="T:Thycotic.Video.Asf.Interop.WM_WRITER_STATISTICS">
            <remarks>
            Sample rates are specified in kilohertz. For instance, a sample rate of 8 indicates 8000 samples per second.
            </remarks>
        </member>
        <member name="T:Thycotic.Video.Asf.ISampleWriter">
            <summary>
            Provides an interface for types that can write samples.
            </summary>
        </member>
        <member name="M:Thycotic.Video.Asf.ISampleWriter.WriteSample(Thycotic.Video.Asf.AsfWriterStream,System.Int32,System.TimeSpan)">
            <summary>
            Writes an uncompressed sample to the writing session in a compressed format.
            </summary>
            <param name="sampleStream">The stream to write.</param>
            <param name="inputNumber">The input number.</param>
            <param name="sampleTime">The sample time.</param>
        </member>
        <member name="T:Thycotic.Video.Asf.IWritingSession">
            <summary>
            A session for writing samples.
            </summary>
        </member>
        <member name="M:Thycotic.Video.Asf.IWritingSession.AllocateSample(System.Int64)">
            <summary>
            Creates a new, writable sample for writing.
            </summary>
            <param name="sampleSize">The size of the sample, in bytes.</param>
            <returns>A stream for reading and writing a sample.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="sampleSize"/> value is zero or negative.</exception>
        </member>
        <member name="M:Thycotic.Video.Asf.IWritingSession.AllocateSample(System.Windows.Media.Imaging.WriteableBitmap)">
            <summary>
            Creates a new, writable sample for writing with a size for the scanline data of the bitmap.
            </summary>
            <param name="bitmap">A bitmap to derrive the sample size from. The sample size is the size of the bitmap's
            back buffer.</param>
            <returns>A stream for reading and writing a sample.</returns>
        </member>
        <member name="M:Thycotic.Video.Asf.IWritingSession.CreatePreprocessorSession(System.Int32,System.Int32)">
            <summary>
            Creates a preprocessor session used for multi-pass VBR encoding.
            </summary>
            <param name="inputNumber">The input number to create the preprocessor session.</param>
            <param name="numberOfPasses">The number of passes used for preprocessing.</param>
            <returns>A disposable writing session.</returns>
        </member>
        <member name="T:Thycotic.Video.Asf.KeyFrameCalculator">
            <summary>
            Calculates a recommended key frame rates.
            </summary>
        </member>
        <member name="M:Thycotic.Video.Asf.KeyFrameCalculator.Calculate(System.TimeSpan)">
            <summary>
            Calculates the recommended key frame rate.
            </summary>
            <param name="totalDuration">A <see cref="T:System.TimeSpan"/> for the duration of the movie.</param>
            <returns>A timespan, indicating the recommended key frame rate.</returns>
        </member>
        <member name="T:Thycotic.Video.Asf.MediaSubTypes">
            <summary>
            GUIDs for media sub-types. These values are named after their respective C-header values.
            </summary>
            <remarks>See wmsdkidl.h in the Windows Media Format SDK for more information about these values.</remarks>
        </member>
        <member name="T:Thycotic.Video.Asf.AsfProfiles">
            <summary>
            A set of common ASF encoding profiles.
            </summary>
        </member>
        <member name="M:Thycotic.Video.Asf.AsfProfiles.MSS2(Thycotic.Video.Asf.AsfProfileManager,System.Int32,System.Int32,System.Int16,System.Double,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Int32)">
            <summary>
            Constructs an MSS2 (Windows Media Video 9 Screen) profile with 1-pass VBR at 50% quality with a keyframe spacing of 4 seconds with 1 frame per-second.
            </summary>
        </member>
        <member name="M:Thycotic.Video.Asf.AsfProfiles.WMV3(Thycotic.Video.Asf.AsfProfileManager,System.Int32,System.Int32,System.Int16,System.Int32,System.Int32,System.Int32)">
            <summary>
            Constructs a WMV3 (Windows Media Video 9) profile with 1-pass VBR at 50% quality with a keyframe spacing of 4 seconds with 1 frame per-second.
            </summary>
        </member>
        <member name="M:Thycotic.Video.Asf.AsfProfiles.WMV32Pass(Thycotic.Video.Asf.AsfProfileManager,System.Int32,System.Int32,System.Int16,System.Int32,System.Int32,System.Int32)">
            <summary>
            Constructs a WMV3 (Windows Media Video 9) profile with 2-pass VBR at 50% quality with a keyframe spacing of 4 seconds with 1 frame per-second.
            </summary>
        </member>
        <member name="T:Thycotic.Video.Asf.Sink">
            <summary>
            Manages a sink for a writer. A sink represents a media for streaming data to, including files,
            network ports, and any custom sinks.
            </summary>
        </member>
        <member name="T:Thycotic.Video.Asf.IWriterPreprocessor">
            <summary>
            Provides an interface for multi-pass VBR preprocessing.
            </summary>
        </member>
        <member name="T:Thycotic.Video.Avi.AviEncodedStream">
            <summary>
            Provides a base class for stream management.
            </summary>
        </member>
        <member name="M:Thycotic.Video.Avi.AviEncodedStream.Dispose(System.Boolean)">
            <summary>
            Cleans up managed and unmanged resources. When overriding, you should always call <c>base.Dispose(disposing)</c>.
            </summary>
            <param name="disposing">True to cleanup managed resources, false for unmanaged only.</param>
        </member>
        <member name="M:Thycotic.Video.Avi.AviEncodedStream.Close">
            <summary>
            Closes the stream, and any resources associated with it. This is an alias to <c>IDisposable.Dispose()</c>.
            </summary>
        </member>
        <member name="M:Thycotic.Video.Avi.AviEncodedStream.Finalize">
            <summary>
            Cleans up any unmanged resouces associated with the stream.
            </summary>
        </member>
        <member name="T:Thycotic.Video.Avi.AviEncoder">
            <summary>
            Manages encoding/decoding of AVI streams.
            </summary>
        </member>
        <member name="M:Thycotic.Video.Avi.AviEncoder.#ctor(System.String,System.Boolean)">
            <summary>
            Creates or Opens an AVI stream.
            </summary>
            <param name="path">The path to open the AVI stream from, or to create it.</param>
            <param name="createNew">True to create a new AVI file, false if opening an existing file.</param>
            <exception cref="T:System.Exception">An exception for the HRESULT returned from opening the file.</exception>
        </member>
        <member name="M:Thycotic.Video.Avi.AviEncoder.CreateVideoStream">
            <summary>
            Creates a new video stream and attaches the stream to the AVI file.
            </summary>
            <remarks>
            The lifetime of the new stream is managed by the <see cref="T:Thycotic.Video.Avi.AviEncoder"/> as well as on the stream itself.
            This stream can be closed either by calling <see cref="M:Thycotic.Video.Avi.AviEncodedStream.Close"/> or <see cref="M:Thycotic.Video.Avi.AviEncoder.Dispose"/>
            which originally created the stream.
            </remarks>
            <returns>A new, uncompressed video stream.</returns>
        </member>
        <member name="M:Thycotic.Video.Avi.AviEncoder.Dispose">
            <summary>
            Cleans up any resources associated with the AVI encoding session.
            </summary>
        </member>
        <member name="M:Thycotic.Video.Avi.AviEncoder.Dispose(System.Boolean)">
            <summary>
            Cleans up any resources associated with the AVI encoding session. This includes any streams that were created in this encoding session.
            </summary>
            <param name="disposing">True to cleanup managed resources, false for unmanaged only.</param>
        </member>
        <member name="M:Thycotic.Video.Avi.AviEncoder.Finalize">
            <summary>
            Cleans up any unmanaged resources associated with the AVI encoding session.
            </summary>
        </member>
        <member name="P:Thycotic.Video.Avi.AviEncoder.Path">
            <summary>
            Gets the path of the video AVI file.
            </summary>
        </member>
        <member name="T:Thycotic.Video.Avi.AviException">
            <summary>
            Provides a class for AVI encoding exceptions.
            </summary>
        </member>
        <member name="M:Thycotic.Video.Avi.AviException.#ctor(System.String)">
            <summary>
            Initializes a new <see cref="T:Thycotic.Video.Avi.AviException"/> instance with a message.
            </summary>
            <param name="message">The message for the exception.</param>
        </member>
        <member name="M:Thycotic.Video.Avi.AviException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new <see cref="T:Thycotic.Video.Avi.AviException"/> instance with a message and inner exception.
            </summary>
            <param name="message">The message for the exception.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:Thycotic.Video.Avi.AviException.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new <see cref="T:Thycotic.Video.Avi.AviException"/> instance with a message and a HRESULT.
            </summary>
            <param name="message">The message for the exception.</param>
            <param name="errorCode">The HRESULT for the inner exception, which is created with <see cref="M:System.Runtime.InteropServices.Marshal.GetExceptionForHR(System.Int32)"/>.</param>
        </member>
        <member name="M:Thycotic.Video.Avi.AviException.#ctor(System.String,System.Int32,Thycotic.Video.EncodingParameter[])">
            <summary>
            Initializes a new <see cref="T:Thycotic.Video.Avi.AviException"/> instance with a message and a HRESULT.
            </summary>
            <param name="message">The message for the exception.</param>
            <param name="errorCode">The HRESULT for the inner exception, which is created with <see cref="M:System.Runtime.InteropServices.Marshal.GetExceptionForHR(System.Int32)"/>.</param>
            <param name="encodingParameters">The current encoding parameters for the session.</param>
        </member>
        <member name="M:Thycotic.Video.Avi.AviException.#ctor(System.String,Thycotic.Video.HRESULT,Thycotic.Video.EncodingParameter[])">
            <summary>
            Initializes a new <see cref="T:Thycotic.Video.Avi.AviException"/> instance with a message and a HRESULT.
            </summary>
            <param name="message">The message for the exception.</param>
            <param name="hresult">The HRESULT for the inner exception, which is created with <see cref="M:System.Runtime.InteropServices.Marshal.GetExceptionForHR(System.Int32)"/>.</param>
            <param name="encodingParameters">The current encoding parameters for the session.</param>
        </member>
        <member name="M:Thycotic.Video.Avi.AviException.#ctor(System.String,Thycotic.Video.EncodingParameter[])">
            <summary>
            Initializes a new <see cref="T:Thycotic.Video.Avi.AviException"/> instance with a message and a HRESULT.
            </summary>
            <param name="message">The message for the exception.</param>
            <param name="encodingParameters">The current encoding parameters for the session.</param>
        </member>
        <member name="M:Thycotic.Video.Avi.AviException.#ctor(System.String,Thycotic.Video.HRESULT)">
            <summary>
            Initializes a new <see cref="T:Thycotic.Video.Avi.AviException"/> instance with a message and a HRESULT.
            </summary>
            <param name="message">The message for the exception.</param>
            <param name="hresult">The HRESULT for the inner exception, which is created with <see cref="M:System.Runtime.InteropServices.Marshal.GetExceptionForHR(System.Int32)"/>.</param>
        </member>
        <member name="T:Thycotic.Video.Avi.CompressedVideoAviEncodedStream">
            <summary>
            A compressed video stream. A compressed video should be created from a non-compressed stream
            and using <see cref="M:Thycotic.Video.Avi.VideoAviEncodedStream.AsCompressed(Thycotic.Video.Avi.VideoCodec)"/> to create a compressed stream.
            </summary>
        </member>
        <member name="T:Thycotic.Video.Avi.VideoAviEncodedStream">
            <summary>
            An uncompressed video stream using an AVI container.
            </summary>
        </member>
        <member name="T:Thycotic.Video.IVideoEncodedStream">
            <summary>
            Defines a contract for video encoding processors.
            </summary>
        </member>
        <member name="M:Thycotic.Video.IVideoEncodedStream.AddFilters(Thycotic.Video.IProcessingFilter[])">
            <summary>
            Adds pre-processing filters. A filter allows manipulation of the frame before it is encoded.
            </summary>
            <param name="filters">One or more pre-processing filters.</param>
        </member>
        <member name="M:Thycotic.Video.IVideoEncodedStream.AddFrame(System.Byte[])">
            <summary>
            Adds a frame of binary form at the end of the video stream.
            </summary>
            <param name="imageContent">A byte array containing a bitmap of the frame being added.</param>
        </member>
        <member name="M:Thycotic.Video.IVideoEncodedStream.AddFrame(System.Windows.Media.Imaging.BitmapSource)">
            <summary>
            Adds a frame at the end of the video stream.
            </summary>
            <param name="frame">A bitmap of the frame being added.</param>
        </member>
        <member name="F:Thycotic.Video.Avi.VideoAviEncodedStream._streamHandle">
            <summary>
            The uncompressed stream handle.
            </summary>
        </member>
        <member name="M:Thycotic.Video.Avi.VideoAviEncodedStream.AddFilters(Thycotic.Video.IProcessingFilter[])">
            <summary>
            Adds pre-processing filters. A filter allows manipulation of the frame before it is encoded.
            </summary>
            <param name="filters">One or more pre-processing filters.</param>
        </member>
        <member name="M:Thycotic.Video.Avi.VideoAviEncodedStream.AddFrame(System.Byte[])">
            <summary>
            Adds a frame of binary form at the end of the video stream.
            </summary>
            <param name="imageContent">A byte array containing a bitmap of the frame being added.</param>
        </member>
        <member name="M:Thycotic.Video.Avi.VideoAviEncodedStream.AddFrame(System.Windows.Media.Imaging.BitmapSource)">
            <summary>
            Adds a frame at the end of the video stream.
            </summary>
            <param name="frame">A bitmap of the frame being added.</param>
        </member>
        <member name="M:Thycotic.Video.Avi.VideoAviEncodedStream.ConstructStream">
            <summary>
            Constructs a new uncompressed AVI video stream.
            </summary>
        </member>
        <member name="M:Thycotic.Video.Avi.VideoAviEncodedStream.Dispose(System.Boolean)">
            <summary>
            Cleans up managed and unmanged resources. When overriding, you should always call <c>base.Dispose(disposing)</c>.
            </summary>
            <param name="disposing">True to cleanup managed resources, false for unmanaged only.</param>
        </member>
        <member name="M:Thycotic.Video.Avi.VideoAviEncodedStream.AsCompressed(Thycotic.Video.Avi.VideoCodec)">
            <summary>
            Creates a compressed video stream from the current uncompressed one.
            </summary>
            <param name="videoCodec">The codec used for compression.</param>
            <returns>A new CompressedVideoEncodedStream.</returns>
        </member>
        <member name="P:Thycotic.Video.Avi.VideoAviEncodedStream.WritingStream">
            <summary>
            The stream that is used for writing data to. This can be either the current uncompressed stream or a compressed stream in derrived classes.
            </summary>
        </member>
        <member name="M:Thycotic.Video.Avi.CompressedVideoAviEncodedStream.ConstructStream">
            <summary>
            Constructs a new compressed AVI video stream ontop of the uncompressed stream.
            </summary>
            <exception cref="T:Thycotic.Video.Avi.AviException">
            Thrown when the specified codec is not installed or not suitable for video processing.
            </exception>
        </member>
        <member name="M:Thycotic.Video.Avi.CompressedVideoAviEncodedStream.Dispose(System.Boolean)">
            <summary>
            Cleans up managed and unmanged resources. When overriding, you should always call <c>base.Dispose(disposing)</c>.
            </summary>
            <param name="disposing">True to cleanup managed resources, false for unmanaged only.</param>
        </member>
        <member name="M:Thycotic.Video.Avi.CompressedVideoAviEncodedStream.AsCompressed(Thycotic.Video.Avi.VideoCodec)">
            <summary>
            Creates a compressed video stream from the current uncompressed one.
            </summary>
            <param name="videoCodec">The codec used for compression.</param>
            <returns>The current compressed video stream.</returns>
        </member>
        <member name="P:Thycotic.Video.Avi.CompressedVideoAviEncodedStream.WritingStream">
            <summary>
            The stream that is used for writing data to. This can be either the current uncompressed stream or a compressed stream in derrived classes.
            </summary>
        </member>
        <member name="T:Thycotic.Video.Avi.CompressorHandler">
            <summary>
            Represents a compressor handler for use in an FccHandler.
            </summary>
        </member>
        <member name="F:Thycotic.Video.Avi.CompressorHandler.DIB">
            <summary>
            Indicates an uncompressed video stream.
            </summary>
        </member>
        <member name="F:Thycotic.Video.Avi.CompressorHandler.MSVC">
            <summary>
            Indicates the compressor handler <c>MSVC</c>
            </summary>
        </member>
        <member name="F:Thycotic.Video.Avi.CompressorHandler.divx">
            <summary>
            Indicates the compressor handler <c>divx</c>
            </summary>
        </member>
        <member name="F:Thycotic.Video.Avi.CompressorHandler.xvid">
            <summary>
            Indicates the compressor handler <c>xvid</c>
            </summary>
        </member>
        <member name="F:Thycotic.Video.Avi.CompressorHandler.cvid">
            <summary>
            Indicates the compressor handler <c>cvid</c>
            </summary>
        </member>
        <member name="T:Thycotic.Video.EncodingParameter">
            <summary>
            Indicates an arbitrary value used in an encoding session.
            </summary>
        </member>
        <member name="M:Thycotic.Video.EncodingParameter.#ctor(System.String,System.Object)">
            <summary>
            Initializes a new encoding parameter with a name and value.
            </summary>
            <param name="name">The name of the encoding parameter.</param>
            <param name="value">The value of the encoding parameter.</param>
        </member>
        <member name="M:Thycotic.Video.EncodingParameter.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Used by the .NET Framework for serialization.
            </summary>
        </member>
        <member name="M:Thycotic.Video.EncodingParameter.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Used by the .NET Framework for serialization.
            </summary>
        </member>
        <member name="P:Thycotic.Video.EncodingParameter.Value">
            <summary>
            The value of the encoding parameter. May either be a <see cref="T:System.String"/> or <see cref="T:System.Int64"/>.
            </summary>
        </member>
        <member name="P:Thycotic.Video.EncodingParameter.Name">
            <summary>
            The name of the encoding parameter.
            </summary>
        </member>
        <member name="T:Thycotic.Video.FrameSizePreprocessorFilter">
            <summary>
            Preprocessor that ensures frames are of a consistent size.
            </summary>
            <remarks>The priority of this processor is 1.</remarks>
        </member>
        <member name="T:Thycotic.Video.IProcessingFilter">
            <summary>
            Interface for allowing a processing filter on frames for video encoding.
            </summary>
        </member>
        <member name="M:Thycotic.Video.IProcessingFilter.Process(System.Windows.Media.Imaging.BitmapSource)">
            <summary>
            Called by the video stream, allowing implementors to return a processed frame.
            </summary>
            <param name="frame">The frame to process. This frame is frozen and cannot be modified.</param>
            <returns></returns>
        </member>
        <member name="P:Thycotic.Video.IProcessingFilter.Priority">
            <summary>
            The priority of the filter. Higher priority filters are processed first.
            </summary>
        </member>
        <member name="M:Thycotic.Video.FrameSizePreprocessorFilter.#ctor(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Creates a new instance of a frame size preprocessor.
            </summary>
            <param name="frameWidth">The desired width of the frames.</param>
            <param name="frameHeight">The desired height of the frames.</param>
            <param name="autoSize">True if the width and height should be expanded to the nearest multiple of 4. The default is true.</param>
        </member>
        <member name="M:Thycotic.Video.FrameSizePreprocessorFilter.Process(System.Windows.Media.Imaging.BitmapSource)">
            <summary>
            Called by the video stream, allowing implementors to return a processed frame.
            </summary>
            <param name="frame">The frame to process. This frame is frozen and cannot be modified.</param>
            <returns></returns>
        </member>
        <member name="P:Thycotic.Video.FrameSizePreprocessorFilter.Priority">
            <summary>
            The priority of the filter. Higher priority filters are processed first.
            </summary>
        </member>
        <member name="T:Thycotic.Video.HRESULT">
            <summary>
            A HRESULT from a Win32 function.
            </summary>
        </member>
        <member name="M:Thycotic.Video.HRESULT.Equals(Thycotic.Video.HRESULT)">
            <summary>
            Determines if the current HRESULT is equal to another instance.
            </summary>
            <param name="other">The other instance of the HRESULT to compare against.</param>
            <returns>True if the HRESULTs are equal, otherwise false.</returns>
        </member>
        <member name="M:Thycotic.Video.HRESULT.Equals(System.Object)">
            <summary>
            Determines if the current HRESULT is equal to another object.
            </summary>
            <param name="obj">The object to compare against.</param>
            <returns>True if the object is equal to the HRESULT, otherwise false.</returns>
        </member>
        <member name="M:Thycotic.Video.HRESULT.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>
            A 32-bit signed integer that is the hash code for this instance.
            </returns>
        </member>
        <member name="M:Thycotic.Video.HRESULT.Throw">
            <summary>
            Throws an exception for the HRESULT.
            </summary>
        </member>
        <member name="M:Thycotic.Video.HRESULT.op_Equality(Thycotic.Video.HRESULT,System.Int32)">
            <summary>
            Compares an HRESULT instance to an integer representation of the HRESULT.
            </summary>
            <param name="hresult">The HRESULT instance.</param>
            <param name="i">The integer HRESULT error code.</param>
            <returns>True if the HRESULT's error code matches the integer error code.</returns>
        </member>
        <member name="M:Thycotic.Video.HRESULT.op_Equality(System.Int32,Thycotic.Video.HRESULT)">
            <summary>
            Compares an HRESULT instance to an integer representation of the HRESULT.
            </summary>
            <param name="hresult">The HRESULT instance.</param>
            <param name="i">The integer HRESULT error code.</param>
            <returns>True if the HRESULT's error code matches the integer error code.</returns>
        </member>
        <member name="M:Thycotic.Video.HRESULT.op_Inequality(System.Int32,Thycotic.Video.HRESULT)">
            <summary>
            Compares an HRESULT instance to an integer representation of the HRESULT.
            </summary>
            <param name="hresult">The HRESULT instance.</param>
            <param name="i">The integer HRESULT error code.</param>
            <returns>True if the HRESULT's error code does not match the integer error code.</returns>
        </member>
        <member name="M:Thycotic.Video.HRESULT.op_Inequality(Thycotic.Video.HRESULT,System.Int32)">
            <summary>
            Compares an HRESULT instance to an integer representation of the HRESULT.
            </summary>
            <param name="hresult">The HRESULT instance.</param>
            <param name="i">The integer HRESULT error code.</param>
            <returns>True if the HRESULT's error code does not match the integer error code.</returns>
        </member>
        <member name="M:Thycotic.Video.HRESULT.op_Equality(Thycotic.Video.HRESULT,Thycotic.Video.HRESULT)">
            <summary>
            Compares two HRESULT instances for equality.
            </summary>
            <param name="left">The left HRESULT operand.</param>
            <param name="right">The right HRESULT operand.</param>
            <returns>True if the HRESULT instances are equal, otherwise false.</returns>
        </member>
        <member name="M:Thycotic.Video.HRESULT.op_Inequality(Thycotic.Video.HRESULT,Thycotic.Video.HRESULT)">
            <summary>
            Compares two HRESULT instances for equality.
            </summary>
            <param name="left">The left HRESULT operand.</param>
            <param name="right">The right HRESULT operand.</param>
            <returns>True if the HRESULT instances are not equal, otherwise false.</returns>
        </member>
        <member name="M:Thycotic.Video.HRESULT.op_Implicit(System.Int32)~Thycotic.Video.HRESULT">
            <summary>
            Creates a new HRESULT from an error code.
            </summary>
            <param name="hresult">The integer for the error code.</param>
            <returns>A new HRESULT for the error code.</returns>
        </member>
        <member name="P:Thycotic.Video.HRESULT.SUCCESS">
            <summary>
            A successful result.
            </summary>
        </member>
        <member name="P:Thycotic.Video.HRESULT.AVIERR_OK">
            <summary>
            A successful result. An alias for <see cref="P:Thycotic.Video.HRESULT.SUCCESS"/>.
            </summary>
        </member>
        <member name="P:Thycotic.Video.HRESULT.E_NOINTERFACE">
            <summary>
            No such interface supported
            </summary>
        </member>
        <member name="P:Thycotic.Video.HRESULT.E_UNSUPPORTED_PROPERTY">
            <summary>
            The property is not supported.
            </summary>
        </member>
        <member name="P:Thycotic.Video.HRESULT.E_INVALIDARG">
            <summary>
            One or more arguments are invalid
            </summary>
        </member>
        <member name="P:Thycotic.Video.HRESULT.NS_E_NO_STREAM">
            <summary>
            There is no stream available.
            </summary>
        </member>
        <member name="P:Thycotic.Video.HRESULT.NS_E_INVALID_STREAM">
            <summary>
            The specified stream does not exist.
            </summary>
        </member>
        <member name="P:Thycotic.Video.HRESULT.AVIERR_BADFORMAT">
            <summary>
            The format is bad.
            </summary>
        </member>
        <member name="P:Thycotic.Video.HRESULT.AVIERR_NOCOMPRESSOR">
            <summary>
            The compressor is not available.
            </summary>
        </member>
        <member name="P:Thycotic.Video.HRESULT.ASF_E_NOTFOUND">
            <summary>
            The object was not found.
            </summary>
        </member>
        <member name="P:Thycotic.Video.HRESULT.AVIERR_NOTSUPPORTED">
            <summary>
            The compressor is not available.
            </summary>
        </member>
        <member name="P:Thycotic.Video.HRESULT.NS_E_INVALID_INPUT_FORMAT">
            <summary>
            The input media format is invalid.
            </summary>
        </member>
        <member name="P:Thycotic.Video.HRESULT.S_FALSE">
            <summary>
            A false result. (0x00000001)
            </summary>
        </member>
        <member name="T:Thycotic.Video.Avi.VideoCodec">
            <summary>
            Specifies a codec for compression of an AVI stream.
            </summary>
        </member>
        <member name="P:Thycotic.Video.Avi.VideoCodec.CodecId">
            <summary>
            An application defined ID of the codec.
            </summary>
        </member>
        <member name="P:Thycotic.Video.Avi.VideoCodec.DisplayName">
            <summary>
            The friendly display name codec.
            </summary>
        </member>
        <member name="P:Thycotic.Video.Avi.VideoCodec.PreferredExtension">
            <summary>
            The preferred file extension of the codec.
            </summary>
        </member>
        <member name="P:Thycotic.Video.Avi.VideoCodec.Quality">
            <summary>
            The quality, 0-10000, of the compressor handler. Use -1 for the default quality.
            </summary>
        </member>
        <member name="P:Thycotic.Video.Avi.VideoCodec.BytesPerSecond">
            <summary>
            The bitrate of the compressor.
            </summary>
        </member>
        <member name="P:Thycotic.Video.Avi.VideoCodec.KeyFrameRate">
            <summary>
            The maximum number of frames between keyframes, or 0 to designate every frame as a keyframe.
            </summary>
        </member>
        <member name="P:Thycotic.Video.Avi.VideoCodec.Parameters">
            <summary>
            Additional application-defined parameters of the codec.
            </summary>
        </member>
        <member name="T:Thycotic.Video.Avi.VideoCodecs">
            <summary>
            Supported video codecs for compressed streams.
            </summary>
        </member>
        <member name="P:Thycotic.Video.Avi.VideoCodecs.MSVC">
            <summary>
            The MSVC (VC1) video codec.
            </summary>
            <remarks>
            This codec is preconfigured to support keyframes, with a keyframe every 2 frames, and specified as an indeterminate bitrate.
            The quality flag is set to -1 to allow the codec to determine the best quality.
            </remarks>
        </member>
        <member name="P:Thycotic.Video.Avi.VideoCodecs.MSVC9">
            <summary>
            The MSVC (VC9) video codec.
            </summary>
            <remarks>
            Placeholder
            </remarks>
        </member>
        <member name="P:Thycotic.Video.Avi.VideoCodecs.DIVX">
            <summary>
            The DIVX video codec.
            </summary>
            <remarks>
            This codec is preconfigured to support keyframes, with a keyframe every 2 frames, and specified as an indeterminate bitrate.
            The quality flag is set to -1 to allow the codec to determine the best quality.
            </remarks>
        </member>
        <member name="P:Thycotic.Video.Avi.VideoCodecs.XVID">
            <summary>
            The XVID video codec.
            </summary>
            <remarks>
            This codec is preconfigured to support keyframes, with a keyframe every 2 frames, and specified as an indeterminate bitrate.
            The quality flag is set to -1 to allow the codec to determine the best quality.
            </remarks>
        </member>
        <member name="P:Thycotic.Video.Avi.VideoCodecs.Cinepak">
            <summary>
            The Cinepak video codec.
            </summary>
            <remarks>
            This codec is preconfigured to support keyframes, with a keyframe every 2 frames, and specified as an indeterminate bitrate.
            The quality flag is set to -1 to allow the codec to determine the best quality.
            </remarks>
        </member>
    </members>
</doc>
