using System.Text;
using Thycotic.InstallerGenerator.Core;
using Thycotic.InstallerGenerator.Core.MSI.WiX;
using Thycotic.InstallerGenerator.Core.Steps;

namespace Thycotic.InstallerGenerator.Runbooks.Services
{
    /// <summary>
    /// Distributed engine service WiX MSI generator runbook
    /// </summary>
    public class AgentToEngineServiceZipGeneratorRunbook : InstallerGeneratorRunbook
    {
        /// <summary>
        /// The default artifact name
        /// </summary>
        public const string DefaultArtifactName = "Thycotic.DistributedEngine.Service";

        /// <summary>
        /// Initializes a new instance of the <see cref="DistributedEngineServiceWiXMsiGeneratorRunbook"/> class.
        /// </summary>
        public AgentToEngineServiceZipGeneratorRunbook()
        {
            Is64Bit = true;
        }

        /// <summary>
        /// Gets the name of the artifact file.
        /// </summary>
        /// <param name="artifactName">Name of the artifact.</param>
        /// <param name="suffix">The suffix.</param>
        /// <param name="is64Bit">if set to <c>true</c> [is64bit].</param>
        /// <param name="version">The version.</param>
        /// <returns></returns>
        public static string GetArtifactFileName(string artifactName, string suffix, bool is64Bit, string version)
        {
            var sb = new StringBuilder();

            sb.Append(artifactName);

            if (!string.IsNullOrWhiteSpace(suffix))
            {
                sb.Append(string.Format("-{0}", suffix));
            }

            sb.Append(is64Bit ? "-x64" : "-x86");

            sb.Append(string.Format(".{0}.zip", version));

            return sb.ToString();
        }

        /// <summary>
        /// Bakes the steps.
        /// </summary>
        /// <exception cref="System.ArgumentException">Engine to server communication ingredients missing.</exception>
        public override void BakeSteps()
        {
            ArtifactName = GetArtifactFileName(DefaultArtifactName, ArtifactNameSuffix, Is64Bit, Version);

//            Steps = new IInstallerGeneratorStep[]
//            {
//                new ExternalProcessStep
//                {
//                    Name = "File harvest (WiX Heat process)",
//                    WorkingPath = WorkingPath,
//                    ExecutablePath = HeatPathProvider(ApplicationPath),// ToolPaths.GetHeatPath(ApplicationPath),
//                    Parameters = string.Format(@"
//dir {0}
//-nologo
//-o output\Autogenerated.wxs 
//-ag 
//-sfrags 
//-suid 
//-cg main_component_group 
//-t add_service_install.xsl 
//-sreg 
//-scom 
//-srd 
//-template fragment 
//-dr INSTALLLOCATION", SourcePath)

//                },
//                new ExternalProcessStep
//                {
//                    Name = "Compiling (WiX Candle process)",
//                    WorkingPath = WorkingPath,
//                    ExecutablePath = CandlePathProvider(ApplicationPath),// ToolPaths.GetCandlePath(ApplicationPath),
//                    Parameters = string.Format(@"
//-fips
//-nologo 
//-arch x64
//-ext WixUtilExtension 
//-dInstallerVersion={0} 
//-out output\
//output\AutoGenerated.wxs Product.wxs", Version)
//                },
//                new ExternalProcessStep
//                {
//                    Name = "Linking and binding (WiX Light process)",
//                    WorkingPath = WorkingPath,
//                    ExecutablePath = LightPathProvider(ApplicationPath),// ToolPaths.GetLightPath(ApplicationPath),
//                    Parameters = string.Format(@"
//-nologo
//-b {0}
//-sval 
//-ext WixUIExtension 
//-ext WixUtilExtension 
//-out {1}
//output\AutoGenerated.wixobj output\Product.wixobj", SourcePath, ArtifactName)
//                }
//            };
        }
    }
}
